{"version":3,"file":"RasterMB.js","sourceRoot":"","sources":["../src/RasterMB.ts"],"names":[],"mappings":"AACA,OAAO,MAAM,MAAM,UAAU,CAAC;AAI9B,MAAM,CAAC,OAAO,OAAO,SAAU,SAAQ,MAAM;IAQzC,YAAY,EAAW;QACnB,KAAK,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;QARZ,gBAAW,GAAW,EAAE,CAAC;QACzB,eAAU,GAAC,KAAK,CAAC;QACjB,YAAO,GAAC,kBAAkB,CAAC;QAE1B,aAAQ,GAAW,4BAA4B,CAAC;QAMpD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IAC3D,CAAC;IAED,gDAAgD;IAChC,YAAY,CAAC,UAAmB,EAAE,IAAY;QAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QAChD,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,4CAA4C;QACtE,MAAM,WAAW,GAAG,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC;QACxD,MAAM,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEzC,IAAI,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,SAAS,GAAG,WAAW,CAAC;QAElI,OAAO,GAAG,CAAC;IACf,CAAC;CACJ","sourcesContent":["import { Vector2 } from \"@babylonjs/core/Maths/math\";\r\nimport Raster from \"./Raster\";\r\nimport TileMath, { ProjectionType } from './TileMath';\r\nimport TileSet from \"./TileSet\";\r\n\r\nexport default class RasterOSM extends Raster{\r\n    public accessToken: string = \"\";\r\n    public doResBoost=false;\r\n    public mapType=\"mapbox.satellite\";\r\n\r\n    private mbServer: string = \"https://api.mapbox.com/v4/\";\r\n    private skuToken: string;\r\n\r\n    constructor(ts: TileSet) {\r\n        super(\"MB\",ts);\r\n\r\n        this.skuToken = this.tileSet.ourTileMath.generateSKU();\r\n    }\r\n\r\n    //https://docs.mapbox.com/api/maps/raster-tiles/\r\n    public override getRasterURL(tileCoords: Vector2, zoom: number): string {\r\n        const prefix = this.mbServer;\r\n        const boostParam = this.doResBoost ? \"@2x\" : \"\";\r\n        let extension = \".jpg90\"; //can do jpg70 to reduce quality & bandwidth\r\n        const accessParam = \"?access_token=\" + this.accessToken;\r\n        const skuParam = \"?sku=\" + this.skuToken;\r\n\r\n        let url = prefix + this.mapType + \"/\" + zoom + \"/\" + (tileCoords.x) + \"/\" + (tileCoords.y) + boostParam + extension + accessParam;\r\n\r\n        return url;\r\n    }\r\n}"]}