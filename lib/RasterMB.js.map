{"version":3,"file":"RasterMB.js","sourceRoot":"","sources":["../src/RasterMB.ts"],"names":[],"mappings":"AACA,OAAO,MAAM,MAAM,UAAU,CAAC;AAG9B,MAAM,CAAC,OAAO,OAAO,QAAS,SAAQ,MAAM;IAQxC,YAAY,EAAW;QACnB,KAAK,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;QARZ,gBAAW,GAAW,EAAE,CAAC;QACzB,eAAU,GAAC,KAAK,CAAC;QACjB,YAAO,GAAC,kBAAkB,CAAC;QAE1B,aAAQ,GAAW,4BAA4B,CAAC;QAMpD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IAC3D,CAAC;IAED,gDAAgD;IAChC,YAAY,CAAC,UAAmB,EAAE,IAAY;QAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QAChD,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,4CAA4C;QACtE,MAAM,WAAW,GAAG,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC;QACxD,MAAM,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEzC,IAAI,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,SAAS,GAAG,WAAW,CAAC;QAElI,OAAO,GAAG,CAAC;IACf,CAAC;CACJ","sourcesContent":["import { Vector2 } from \"@babylonjs/core/Maths/math\";\nimport Raster from \"./Raster\";\nimport TileSet from \"./TileSet\";\n\nexport default class RasterMB extends Raster{\n    public accessToken: string = \"\";\n    public doResBoost=false;\n    public mapType=\"mapbox.satellite\";\n\n    private mbServer: string = \"https://api.mapbox.com/v4/\";\n    private skuToken: string;\n\n    constructor(ts: TileSet) {\n        super(\"MB\",ts);\n\n        this.skuToken = this.tileSet.ourTileMath.generateSKU();\n    }\n\n    //https://docs.mapbox.com/api/maps/raster-tiles/\n    public override getRasterURL(tileCoords: Vector2, zoom: number): string {\n        const prefix = this.mbServer;\n        const boostParam = this.doResBoost ? \"@2x\" : \"\";\n        let extension = \".jpg90\"; //can do jpg70 to reduce quality & bandwidth\n        const accessParam = \"?access_token=\" + this.accessToken;\n        const skuParam = \"?sku=\" + this.skuToken;\n\n        let url = prefix + this.mapType + \"/\" + zoom + \"/\" + (tileCoords.x) + \"/\" + (tileCoords.y) + boostParam + extension + accessParam;\n\n        return url;\n    }\n}"]}