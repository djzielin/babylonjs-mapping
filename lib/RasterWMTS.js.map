{"version":3,"file":"RasterWMTS.js","sourceRoot":"","sources":["../src/RasterWMTS.ts"],"names":[],"mappings":"AACA,OAAO,MAAM,MAAM,UAAU,CAAC;AAE9B,OAAO,EAAE,iBAAiB,EAAE,MAAM,WAAW,CAAC;AAG9C,MAAM,CAAC,OAAO,OAAO,UAAW,SAAQ,MAAM;IAO1C,YAAY,EAAW,EAAE,iBAAiB,GAAG,iBAAiB,CAAC,eAAe;QAC1E,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC;QAPlC,kBAAa,GAAW,cAAc,CAAC;QACvC,UAAK,GAAG,SAAS,CAAC;QAClB,cAAS,GAAG,MAAM,CAAC;QACnB,YAAO,GAAG,EAAE,CAAC;QACb,cAAS,GAAG,EAAE,CAAC;IAItB,CAAC;IAEM,KAAK,CAAC,GAAW,EAAE,KAAa;QACnC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,6FAA6F;IAC7F,kHAAkH;IAElG,YAAY,CAAC,UAAmB,EAAE,IAAY;QAC1D,IAAI,OAAO,GAAW,IAAI,CAAC,OAAO,GAAG,cAAc,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QACnH,IAAI,GAAG,GAAW,OAAO,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QAEtG,IAAI,IAAI,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,KAAK,EAAE,CAAC;YACpD,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,gCAAgC;YAC9H,GAAG,GAAG,OAAO,GAAG,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACvG,CAAC;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAED,oIAAoI;IACpH,UAAU,CAAC,OAAoB;QAC3C,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE,CAAC;gBACpB,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;oBACrB,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACpC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBAC1C,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,GAAC,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3G,CAAC,CAAC,KAAK,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ","sourcesContent":["import { Vector2 } from \"@babylonjs/core/Maths/math\";\nimport Raster from \"./Raster\";\nimport TileSet from \"./TileSet\";\nimport { RetrievalLocation } from \"./TileSet\";\nimport { TileRequest } from \"./TileSet\";\n\nexport default class RasterWMTS extends Raster {\n    public tileMatrixSet: string = \"default028mm\";\n    public style = \"default\";\n    public extension = \".png\";\n    public baseURL = \"\";\n    public layerName = \"\";\n\n    constructor(ts: TileSet, retrievalLocation = RetrievalLocation.Remote_and_Save) {\n        super(\"WMTS\", ts, retrievalLocation);\n    }\n\n    public setup(url: string, layer: string) {\n        this.baseURL = url;\n        this.layerName = layer;\n    }\n\n    //https://developers.arcgis.com/rest/services-reference/enterprise/wmts-tile-map-service-.htm\n    //https://<wmts-url>/tile/<wmts-version>/<layer>/<style>/<tilematrixset>/<tilematrix>/<tilerow>/<tilecol>.<format>\n\n    public override getRasterURL(tileCoords: Vector2, zoom: number): string {\n        let baseURL: string = this.baseURL + \"/tile/1.0.0/\" + this.layerName + \"/\" + this.style + \"/\" + this.tileMatrixSet;\n        let url: string = baseURL + \"/\" + zoom + \"/\" + (tileCoords.y) + \"/\" + (tileCoords.x) + this.extension;\n\n        if (this.retrievalLocation == RetrievalLocation.Local) {\n            const baseUrl = window.location.href.replace(/\\/[^/]*\\.[^/]*$/, \"\").replace(/\\/$/, \"\") + \"/\"; //TODO make this a util function\n            url = baseUrl + \"map_cache/\" + zoom + \"_\" + (tileCoords.y) + \"_\" + (tileCoords.x) + this.extension;\n        }\n\n        return url;\n    }\n\n    //TODO, this should really be somewhere else so it works for all Raster subclasses, but we wanted to get the this.extension variable\n    public override doTileSave(request: TileRequest) {\n        fetch(request.url).then((res) => {\n            if (res.status == 200) {\n                res.blob().then((blob) => {\n                    var a = document.createElement(\"a\");\n                    a.href = window.URL.createObjectURL(blob);\n                    a.download = request.tileCoords.z + \"_\" + request.tileCoords.y+\"_\" + request.tileCoords.x + this.extension;\n                    a.click();\n                });\n            }\n        });\n    }\n}"]}